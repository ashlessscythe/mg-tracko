DEVELOPMENT AND TESTING MILESTONES

1. CORE SETUP (Priority: HIGHEST)
- [X] Set up PostgreSQL on Neon.tech + configure env
- [X] Run migrations
- [X] Test database connection

2. AUTH IMPLEMENTATION (Priority: HIGH)
Backend:
- [X] Test /api/auth/register and /api/auth/login
- [X] Verify role-based middleware

Frontend:
- [X] Create /login page
  * Email/password form
  * Error handling
  * Redirect to dashboard
- [X] Create /register page

3. DASHBOARD & REQUESTS (Priority: HIGH)

#### Backend:
- [ ] Create and Test `/api/requests` endpoints:
  - [ ] POST `/requests` - Allow CS to submit new requests.
  - [ ] GET `/requests` - Retrieve all requests (warehouse/admin view).
  - [ ] GET `/requests?user={id}` - Retrieve requests for a specific user (CS view).
  - [ ] PATCH `/requests/{id}` - Allow status updates, field edits, and notes (Warehouse/Admin).
  - [ ] DELETE `/requests/{id}` - Allow admins to delete requests with logged reason.

#### Frontend:
- [X] Create dashboard (`/`)
  - [X] Request status overview.
  - [X] Quick search.
  - [X] Metrics display.

- [X] Create new request form (`/requests/new`)
  - [X] All required fields.
  - [X] Validation.

- [ ] Allow Customer Service to:
  - [ ] View their own requests (`/requests` with filter).
  - [ ] Edit their own requests via request-detail view (`/requests/[id]`).
  - [ ] Track history of edits and status changes (logged notes per action).

- [ ] Allow Warehouse Staff to:
  - [ ] View all requests (`/requests` with sortable columns and filters by status).
  - [ ] Modify request statuses (e.g., Pending, In Progress, Complete).
  - [ ] Add notes to requests.
  - [ ] View full action history for each request (`/requests/[id]`).

- [ ] Allow Admins to:
  - [ ] View all requests.
  - [ ] Edit any request details.
  - [ ] Delete requests with logged reason and timestamp.

- [X] Create request queue (`/requests`)
  - [X] Sortable columns.
  - [X] Status filters.
  - [X] Warehouse actions.

- [X] Create request detail view (`/requests/[id]`)
  - [X] Display full request info.
  - [X] Enable status updates.
  - [X] Show action history.

#### Optional Features:
- [ ] Add audit logs for all actions (viewable by admins):
  - [ ] Log status updates, edits, note additions, and deletions.
  - [ ] Include timestamps, user names, and change details.

- [ ] Add escalation process:
  - [ ] Allow CS to flag urgent requests for admin/warehouse review.

- [ ] Add notifications:
  - [ ] Notify CS of status updates.
  - [ ] Notify Warehouse of new requests.

4. ADMIN FEATURES
Backend:
- [ ] Test user management endpoints
- [ ] Test role updates

Frontend:
- [x] Create admin panel (/admin)
  * User management
  * System settings
  * Activity logs

5. TESTING & DEPLOYMENT
- [ ] Test all user flows:
  * CS creates request
  * Warehouse processes
  * Admin manages
- [ ] Deploy to Koyeb
- [ ] Verify production

PAGE REQUIREMENTS:

/login
- Email/password form
- Dark/light mode
- Error handling

/dashboard (/)
- Status overview cards
- Search bar
- Key metrics
- Recent activity

/requests/new
- Shipment number input
- Part number selection
- Pallet count input
- Route info
- Additional notes
- Submit/cancel

/requests
- Request queue table
- Status filters
- Sort options
- Action buttons
- Search/filter

/requests/[id]
- Request details
- Status updates
- History log
- Actions based on role

/admin
- User management
- Role assignments
- System settings
- Activity monitoring

DESIGN REQUIREMENTS:
- Use ShadcnUI components
- Implement dark/light mode
- Responsive design
- Professional UI
